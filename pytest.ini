[pytest]
DJANGO_SETTINGS_MODULE = locallibrary.settings
# -- recommended but optional:
python_files = tests.py test_*.py *_tests.py
python_classes = Test*
python_functions = test_*, test*
minversion = 6.0
; suppress warnings
filterwarnings =
    ; ignore::UserWarning
    ; ignore:InsecureRequestWarning
    ; ignore::django.utils.deprecation.RemovedInDjango50Warning

markers =

; When the --strict-markers command-line flag is passed, any unknown marks applied with the @pytest.mark.name_of_the_mark decorator will trigger an error. You can enforce this validation in your project by adding --strict-markers to addopts:
; https://docs.pytest.org/en/7.1.x/how-to/mark.html?highlight=strict

; e.g if you have not setup marker in this file called setupstrict and you use it with pytest -m setupstrict it will throw an error

addopts =
    --strict-markers
    -p no:warnings
    -p no:logging



# for log file - pytest uses these whenever logger used
log_file = log/pytesting.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format=%Y-%m-%d %H:%M:%S
